#!/bin/sh

set -x

WS="/vagrant/ws/${HOST_NAME}"
mkdir -p "${WS}"

# NOTE: It seems that storlets need to chown some file to root so it
# can not be checked out in shared dir, revert to our home

cd /home/vagrant
git clone https://github.com/openstack/storlets.git

# NOTE: we need to ssh to ourself, if not ansible will fails with
# strange errors, note that there is no need to do an interactive
# TOFU, I guess because of some vagrant customization of ssh config
# Generate the key
ssh-keygen -q -t rsa -f ~/.ssh/id_rsa -N ""
# Allow the connection from ourself
cat "${HOME}/.ssh/id_rsa.pub" >> "${HOME}/.ssh/authorized_keys"

# cd storlets
# ./s2aio.sh 1

cd ${WS};
git clone -b stable/kilo "https://git.openstack.org/openstack-dev/devstack"

# NOTE: see the escaping at work in the here document

cat <<EOF > ${WS}/devstack/local.conf
# See an example at:
# https://gist.github.com/dolph/72d7adf8f8e8229fb29b

[[local|localrc]]
ADMIN_PASSWORD=secrete
DATABASE_PASSWORD=\$ADMIN_PASSWORD
RABBIT_PASSWORD=\$ADMIN_PASSWORD
SERVICE_PASSWORD=\$ADMIN_PASSWORD
SERVICE_TOKEN=a682f596-76f3-11e3-b3b2-e716f9080d55
#FIXED_RANGE=172.31.1.0/24
#FLOATING_RANGE=192.168.20.0/25
HOST_IP=$HOST_PRIVATE_IP

LOGFILE=\$DEST/logs/stack.sh.log

SWIFT_HASH=66a3d6b56c1f479c8b4e70ab5c2000f5
SWIFT_REPLICAS=1
SWIFT_DATA_DIR=$DEST/data/swift

disable_all_services

disable_service c-api
disable_service c-sch
disable_service c-vol
disable_service g-api
disable_service g-lbaasv2
disable_service g-reg
disable_service glance
disable_service h-api
disable_service h-api-cfn
disable_service h-api-cw
disable_service h-eng
disable_service heat
disable_service horizon
disable_service n-net
disable_service neutron
disable_service q-agt
disable_service q-dhcp
disable_service q-l3
disable_service q-meta
disable_service q-svc
disable_service tempest

enable_service key
enable_service key-access
enable_service rabbit
enable_service mysql
enable_service s-account
enable_service s-container
enable_service s-object
enable_service s-proxy
enable_service swift

EOF

cd ${WS}/devstack; ./unstack.sh
cd ${WS}/devstack; ./stack.sh

# Storlets
mkdir -p /home/vagrant/lxc_device

cat <<EOF > ${HOME}/storlets/install/storlets/common.yml
---
# A cross nodes directory for Storlets internal usage. Must exist with
# the same name in all proxy and storage nodes.

lxc_device: /home/vagrant/lxc_device

# A pointer to this repo

storlet_source_dir: /home/vagrant/storlets

# Swift Access information. The below IP should be an IP of one of the
# proxies.

swift_endpoint_host: 127.0.0.1 
swift_public_url: http://{{ swift_endpoint_host }}:80/v1

# Keystone access information
keystone_endpoint_host: 127.0.0.1
keystone_admin_url: http://{{ keystone_endpoint_host }}:35357/v2.0
keystone_public_url: http://{{ keystone_endpoint_host }}:5000/v2.0
keystone_admin_token: a682f596-76f3-11e3-b3b2-e716f9080d55
# keystone_admin_password: secrete

# Information for creating an account for the Storlet manager
storlet_management_account: storlet_management
storlet_management_admin_username: storlet_manager
storlet_manager_admin_password: storlet_manager

# Information for creating a Storlet enabled account
storlets_default_tenant_name: service
storlets_default_tenant_user_name: swift
storlets_default_tenant_user_password: sweetforme

swift_user_id: 1000
swift_group_id: 1000

# middleware and gateway config file constants
storlet_execute_on_proxy_only: false
EOF

cat <<EOF > ${HOME}/hosts_for_ansible
127.0.0.1 ansible_ssh_user=vagrant

[docker]
127.0.0.1

[storlet-mgmt]
127.0.0.1

[storlet-proxy]
127.0.0.1

[storlet-storage]
127.0.0.1

EOF

# TODO Not in the documentation
sudo apt-get install --yes ant
sudo apt-get install --yes openjdk-7-jdk
sudo apt-get install --yes ansible

# For our convenience
sudo apt-get install --yes devscripts

cd  ${HOME}/storlets
ant build


# TODO The documentation seems wrong about the path of common.yml
mkdir -p ${HOME}/storlets/install/storlets/deploy
cp ${HOME}/storlets/install/storlets/common.yml ${HOME}/storlets/install/storlets/deploy/common.yml

mkdir deploy
cp ${HOME}/storlets/install/storlets/common.yml deploy/common.yml

# Blindly trust remote host with ansible
ANSIBLE_HOST_KEY_CHECKING=False
export ANSIBLE_HOST_KEY_CHECKING

annotate-output \
    ansible-playbook -vvvv \
    -i ${HOME}/hosts_for_ansible install/storlets/storlet.yml | \
    tee /vagrant/install.log
